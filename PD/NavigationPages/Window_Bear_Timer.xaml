<Window x:Class="PD.NavigationPages.Window_Bear_Timer"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PD.NavigationPages"
        mc:Ignorable="d"
        xmlns:vm="clr-namespace:PD.ViewModel"
        xmlns:UC="clr-namespace:PD.UI"
        Title=" "
        Width="700"
        Height="300"
        MaxHeight="840"
        Topmost="True"
        AllowsTransparency="True"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None">
    <Window.DataContext>
        <vm:ComViewModel />
    </Window.DataContext>

    <Window.Resources>
        <Style x:Key="ProgressBarStyle"
               TargetType="{x:Type ProgressBar}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Border BorderBrush="#BBC6C4">
                            <Grid x:Name="PART_Track">
                                <Rectangle x:Name="PART_Indicator"
                                           HorizontalAlignment="Left">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0.5,0"
                                                             EndPoint="0.5,1">
                                            <GradientStop Offset="1"
                                                          Color="#FF1D5666" />
                                            <GradientStop Color="#FF09B6FF" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="BearImg_Storyboard_1">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                           Storyboard.TargetName="border">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                      Value="1" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="BearImg_Storyboard_2">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                           Storyboard.TargetName="image">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                      Value="0.9" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.2"
                                      Value="1" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
                                           Storyboard.TargetName="image">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                      Value="0" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="BearImg_Storyboard_3">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                           Storyboard.TargetName="border">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                      Value="0" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="UIElement.MouseEnter"
                      SourceName="image">
            <BeginStoryboard x:Name="BearImg_Storyboard_1_BeginStoryboard"
                             Storyboard="{StaticResource BearImg_Storyboard_1}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseLeftButtonDown"
                      SourceName="image">
            <BeginStoryboard x:Name="BearImg_Storyboard_2_BeginStoryboard"
                             Storyboard="{StaticResource BearImg_Storyboard_2}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseLeave"
                      SourceName="image">
            <BeginStoryboard Storyboard="{StaticResource BearImg_Storyboard_3}" />
        </EventTrigger>
    </Window.Triggers>

    <Grid Name="window_timer"
          Background="#FF5877AB">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.2*" />
            <ColumnDefinition />
            <ColumnDefinition Width="0.1*" />
            <ColumnDefinition />
            <ColumnDefinition Width="0.1*" />
            <ColumnDefinition />
            <ColumnDefinition Width="0.1*" />
            <ColumnDefinition />
            <ColumnDefinition Width="0.2*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.2*" />
            <RowDefinition Height="0.1*" />
            <RowDefinition Height="1.2*" />
            <RowDefinition Height="0.1*" />
            <RowDefinition Height="0.2*" />
        </Grid.RowDefinitions>
        
        <Grid Grid.Row="0"
              Grid.Column="0"
              Grid.ColumnSpan="10">
            <Border x:Name="border_title"
                    MouseMove="border_title_MouseMove"
                    PreviewMouseLeftButtonDown="border_title_PreviewMouseLeftButtonDown"
                    MouseLeftButtonUp="border_title_MouseLeftButtonUp"
                    Background="#FF646464" />
            <StackPanel HorizontalAlignment="Right"
                        Orientation="Horizontal">
                <Button x:Name="btn_min"
                        Height="{Binding Height, ElementName=border_title, Mode=OneWay}"
                        Width="{Binding Height, Mode=OneWay, RelativeSource={RelativeSource Self}}"
                        Style="{DynamicResource style_WindowFuncBtn}"
                        Tag="../Resources/Min_black.png"
                        Margin="3"
                        MaxHeight="30"
                        MaxWidth="30"
                        IsTabStop="False"
                        Background="Transparent"
                        Click="btn_min_Click">
                    <Image Source="../Resources/Min_black.png" />
                </Button>
                <Button x:Name="btn_close"
                        Height="{Binding Height, ElementName=border_title, Mode=OneWay}"
                        Width="{Binding Height, Mode=OneWay, RelativeSource={RelativeSource Self}}"
                        Background="Transparent"
                        Style="{DynamicResource style_WindowFuncBtn}"
                        Tag="../Resources/Close_black.png"
                        Margin="3"
                        IsTabStop="False"
                        MaxHeight="30"
                        MaxWidth="30"
                        Click="btn_close_Click" />
            </StackPanel>
        </Grid>

        <!--<Image Grid.Row="1"
               Grid.RowSpan="4"
               Grid.Column="0"
               Grid.ColumnSpan="9"
               Source="../Resources/Iceland.jpg"
               Stretch="UniformToFill"
               Cursor="Arrow" />-->

        <!--  Hour  -->
        <UC:UC_TimerBlock Grid.Row="2"
                          Grid.Column="1"
                          Txt_Time="{Binding int_timer_hrs, FallbackValue=0, Mode=TwoWay}"
                          Txt_Time_Msg="Hours"
                          Gauge_Color="{Binding Complement_Color}"
                          Gauge_EndAngle="{Binding int_timer_hrs_angle, FallbackValue=0, Mode=TwoWay}" />

        <!--  Minutes  -->
        <UC:UC_TimerBlock Grid.Row="2"
                          Grid.Column="3"
                          Txt_Time="{Binding int_timer_min, FallbackValue=00, Mode=TwoWay}"
                          Txt_Time_Msg="Minutes"
                          Gauge_Color="{Binding Complement_Color}"
                          Gauge_EndAngle="{Binding int_timer_min_angle, FallbackValue=150, Mode=TwoWay}" />

        <!--  Hour  -->
        <UC:UC_TimerBlock Grid.Row="2"
                          Grid.Column="5"
                          Txt_Time="{Binding int_timer_sec, FallbackValue=60, Mode=TwoWay}"
                          Txt_Time_Msg="Seconds"
                          Gauge_Color="{Binding Complement_Color}"
                          Gauge_EndAngle="{Binding int_timer_sec_angle, FallbackValue=150, Mode=TwoWay}" />

        <Grid Grid.Column="7"
              Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="15*" />
                <RowDefinition Height="180*" />
                <RowDefinition Height="15*" />
                <RowDefinition Height="35*" />
            </Grid.RowDefinitions>
            <Viewbox Grid.Row="1">
                <Border CornerRadius="200"
                        Width="230"
                        Grid.Row="1"
                        MouseLeftButtonDown="Border_MouseLeftButtonDown"
                        Background="Transparent">
                    <Grid x:Name="grid"
                          Background="Transparent"
                          Width="195">
                        <Border x:Name="border"
                                Background="#FFFFB900"
                                Opacity="0"
                                CornerRadius="{Binding window_bear_width}" />
                        <Image x:Name="image"
                               Margin="5"
                               Source="../Resources/polar-bear.png"
                               OpacityMask="Black"
                               RenderTransformOrigin="0.5,0.5">
                            <Image.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Image.RenderTransform>
                        </Image>
                    </Grid>
                </Border>
            </Viewbox>
            <Viewbox Grid.Row="3">
                <TextBlock x:Name="bear_msg"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Grid.Row="2"
                           TextWrapping="Wrap"
                           Text="Go"
                           Style="{DynamicResource Window_Bear_Timer_txtBlock}" />
            </Viewbox>
        </Grid>
    </Grid>
</Window>
